#!/bin/sh -e
# This script curls StevenBlack/hosts into /etc/hosts for ad-blocking
# while optionally ensuring no unauthorized IP addresses are added to
# the hosts file. Run this script in your root crontab at your own risk.
#
# These files may be used to affect the behavior of this script:
# - /etc/hosts.allowed
#     A newline-separated list of IP addresses allowed in the hosts
#     file. This whitelist causes the script to exit with an error if an
#     IP address occurs in the pending hosts file but not in the
#     hosts.allowed file. This is highly recommended for security,
#     or else the adblock list could redirect domains to arbitrary IP
#     addresses.
# - /etc/hosts.include
#     This file is appended to /etc/hosts after interpreting
#     hosts.allowed.
# - /etc/hosts.exclude
#     a newline-separated list of case-insensitive extended regular
#     expressions which will exclude any domains they match from the
#     hosts file.
#

date +'# curled on %c' > /etc/hosts.pending

curl -LSsf https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts \
	>> /etc/hosts.pending

if [ -r /etc/hosts.allowed ]; then
	sort -u /etc/hosts.allowed -o /etc/hosts.allowed

	unallowed=$(
		awk 'NF && $1 !~ /^#/ { print $1 }' /etc/hosts.pending |
			sort -u | comm -23 - /etc/hosts.allowed
	)

	if [ "$unallowed" ]; then
		printf '%s\n' 'Not allowed:' "$unallowed" >&2
		exit 1
	fi
fi

cat /etc/hosts.include >> /etc/hosts.pending || :

if [ -r /etc/hosts.exclude ]; then
	# XXX this loop is pretty slow
	linenos=$(
		awk 'NF && $1 !~ /^#/ { print NR, $2 }' /etc/hosts.pending |
			while read -r lineno domain; do
				{
					grep -qEif /etc/hosts.exclude <<-EOF
						$domain
					EOF
				} || continue
				echo "${lineno}d"
			done
	)
	sed -i "$linenos" /etc/hosts.pending
fi

cat /etc/hosts.pending > /etc/hosts
rm -f /etc/hosts.pending

