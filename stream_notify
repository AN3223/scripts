#!/bin/sh -e

help() {
	cat - >&2 <<EOF
stream_notify - show streams that are currently live

stream_notify

This script requires a line-by-line list of stream URLs at ~/.streams
(or another file specified by the NOTIFYSTREAMS environment variable)
and youtube-dl. Each URL may be followed by an optional nickname for the
stream (e.g. http://website.com/stream123 stream123).

Duplicate notifications will be suppressed via a state file. The file is 
located at ~/.streams.state by default (also configurable by the 
NOTIFYSTREAMS environment variable).

Examples using cron:
	# */10 * * * * means to run every 10 minutes

	# Using my snotify script
	*/10 * * * * stream_notify | snotify -

	# Using a simple file
	*/10 * * * * stream_notify > ~/.livestreams

	# Using nothing, expecting cron to send you mail
	*/10 * * * * stream_notify
EOF
}

if [ "$*" ]; then
	help; exit 1;
fi

file=${NOTIFYSTREAMS:-"${HOME:?}/.streams"}

if [ ! -f "$file.state" ]; then
	touch "$file.state"
fi

unset -v newstate

exec < "$file"
while read -r url stream; do
	[ "$url" = "${url#\#}" ] || continue

	# ideally would use title, but the titles returned by ytdl for twitch 
	# are not useful here
	desc=$(youtube-dl -q --get-description "$url" 2> /dev/null) || continue

	newstate="$newstate
$url $desc"
	if grep -Fxqe "$url $desc" "$file.state"; then
		continue
	fi

	printf '%s\n' "${stream:-$url} is live: $desc"
done

printf '%s\n' "$newstate" > "$file.state"

